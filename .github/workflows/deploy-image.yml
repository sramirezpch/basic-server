name: Deploy Docker image

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag and push image to ECR
        run: |
          IMAGE_TAG={{github.event.release.tag_name}}
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
        env:
          AWS_REGION: ${{secrets.AWS_REGION}}
          AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
          ECR_REPOSITORY_NAME: ${{secrets.ECR_REPOSITORY_NAME}}

      - name: Register ECS Task Definition
        id: ecs-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: basic-server
          container-image: basic-server:latest
          container-port: 8080
        env:
          AWS_REGION: ${{secrets.AWS_REGION}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Deploy to ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definiton: ${{steps.ecs-task-definition.outputs.task-definiton-arn}}
          service: basic-server-service
          cluster: basic-server
        env:
          AWS_REGION: ${{secrets.AWS_REGION}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
